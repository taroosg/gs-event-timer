{"version":3,"sources":["components/Counter.tsx","data/events.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Counter","event","countType","useState","count","setCount","convertCount","timestamp","hours","String","Math","floor","padStart","minutes","seconds","days","setTime","useCallback","targetTimestamp","setTimeout","Date","getTime","useEffect","datetime","TableRow","TableCell","align","name","events","kadai","submit","hubday","darkTheme","createMuiTheme","typography","fontSize","palette","type","primary","main","secondary","colors","useStyles","makeStyles","theme","createStyles","root","display","flexDirection","alignItems","justifyContent","height","margin","spacing","App","uriArray","window","location","pathname","split","params","length","console","log","classEvents","setCountType","isCompleted","filter","x","sort","a","b","classes","CssBaseline","className","Breadcrumbs","aria-label","Link","color","onClick","TableContainer","component","Paper","Table","TableHead","style","width","TableBody","textAlign","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"oTAKaA,EAAU,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,UAC/B,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAwBMC,EAAe,CAfD,SAACC,GACnB,IAAMC,EAAQC,OAAOC,KAAKC,MAAMJ,EAAS,OAAsBK,SAAS,EAAG,KACrEC,EAAUJ,OAAOC,KAAKC,MAAOJ,EAAS,KAAV,MAA+CK,SAAS,EAAG,KACvFE,EAAUL,OAAOC,KAAKC,MAAOJ,EAAS,IAAkB,MAAOK,SAAS,EAAG,KACjF,MAAM,GAAN,OAAUJ,EAAV,aAAoBK,EAApB,aAAgCC,EAAhC,MAGkB,SAACP,GACnB,IAAMQ,EAAON,OAAOC,KAAKC,MAAMJ,EAAS,QAA2BK,SAAS,EAAG,KACzEJ,EAAQC,OAAOC,KAAKC,MAAOJ,EAAS,MAAV,OAAyDK,SAAS,EAAG,KAC/FC,EAAUJ,OAAOC,KAAKC,MAAOJ,EAAS,KAAV,MAA+CK,SAAS,EAAG,KACvFE,EAAUL,OAAOC,KAAKC,MAAOJ,EAAS,IAAkB,MAAOK,SAAS,EAAG,KACjF,MAAM,GAAN,OAAUG,EAAV,aAAmBP,EAAnB,aAA6BK,EAA7B,aAAyCC,EAAzC,OAKIE,EAAUC,uBAAY,SAAAC,GAC1BC,YAAW,WACTd,EAAkBa,GAvBR,IAAIE,MAAOC,UACD,KAuBpBL,EAAQE,KACP,OACF,IAMH,OAJAI,qBAAU,WA/ByB,IAACC,EAgClCP,GAhCkCO,EAgCCtB,EAAMsB,SAhCsB,IAAIH,KAAKG,GAAUF,cAiCjF,CAACpB,EAAMsB,SAAUP,IAGlB,mCAEc,IAAVZ,EACI,GACA,eAACoB,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGzB,EAAM0B,OAET,cAACF,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BpB,EAAaJ,GAAWE,W,gDCpDlDwB,EAAS,CACpB,UAAW,CACTC,MAAO,CACL,CACEF,KAAM,iBACNJ,SAAU,6BAEZ,CACEI,KAAM,eACNJ,SAAU,6BAEZ,CACEI,KAAM,iBACNJ,SAAU,6BAEZ,CACEI,KAAM,qBACNJ,SAAU,6BAEZ,CACEI,KAAM,iBACNJ,SAAU,6BAEZ,CACEI,KAAM,YACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,8BAGdO,OAAQ,CACN,CACEH,KAAM,mBACNJ,SAAU,8BAGdQ,OAAQ,CACN,CACEJ,KAAM,oBACNJ,SAAU,+BAIhB,UAAW,CACTM,MAAO,CACL,CACEF,KAAM,iBACNJ,SAAU,6BAEZ,CACEI,KAAM,eACNJ,SAAU,6BAEZ,CACEI,KAAM,qBACNJ,SAAU,6BAEZ,CACEI,KAAM,iBACNJ,SAAU,6BAEZ,CACEI,KAAM,YACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,8BAGdO,OAAQ,CACN,CACEH,KAAM,mBACNJ,SAAU,8BAGdQ,OAAQ,CACN,CACEJ,KAAM,oBACNJ,SAAU,+BAIhB,UAAW,CACTM,MAAO,CACL,CACEF,KAAM,iBACNJ,SAAU,6BAEZ,CACEI,KAAM,eACNJ,SAAU,6BAEZ,CACEI,KAAM,qBACNJ,SAAU,6BAEZ,CACEI,KAAM,iBACNJ,SAAU,6BAEZ,CACEI,KAAM,YACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,8BAGdO,OAAQ,CACN,CACEH,KAAM,mBACNJ,SAAU,8BAGdQ,OAAQ,CACN,CACEJ,KAAM,oBACNJ,SAAU,+BAIhB,UAAW,CACTM,MAAO,CACL,CACEF,KAAM,eACNJ,SAAU,6BAEZ,CACEI,KAAM,qBACNJ,SAAU,6BAEZ,CACEI,KAAM,iBACNJ,SAAU,6BAEZ,CACEI,KAAM,YACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,6BAEZ,CACEI,KAAM,cACNJ,SAAU,8BAGdO,OAAQ,CACN,CACEH,KAAM,mBACNJ,SAAU,8BAGdQ,OAAQ,CACN,CACEJ,KAAM,oBACNJ,SAAU,gCCzNZS,EAAYC,YAAe,CAC/BC,WAAY,CACVC,SAAU,IAEZC,QAAS,CACPC,KAAM,OACNC,QAAS,CAEPC,KAAM,WAERC,UAAWC,OAITC,EAAYC,aAAW,SAAAC,GAAK,OAChCC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,QACR,eAAgB,CACdC,OAAQR,EAAMS,QAAQ,UAoBjBC,EAAM,WACjB,IAAMC,EAAWC,OAAOC,SAASC,SAASC,MAAM,KAC1CC,EAA0BL,EAASA,EAASM,OAAS,GAC3DC,QAAQC,IAAIH,GACZ,IACMI,EADYpC,EACwBgC,GAE1C,EAAkCzD,mBAAS,GAA3C,mBAAOD,EAAP,KAAkB+D,EAAlB,KAEMC,EAAc,SAACtC,GACnB,OAAOA,EACJuC,QAAO,SAAAC,GAAC,OAAI,IAAIhD,KAAKgD,EAAE7C,UAAUF,WAAY,IAAID,MAAOC,aACxDgD,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAAE/C,SAAWgD,EAAEhD,SAAW,GAAK,KAC9D,IAGGiD,EAAU9B,EAAUV,GAE1B,OACE,eAAC,IAAD,CAAkBY,MAAOZ,EAAzB,UACE,cAACyC,EAAA,EAAD,IACA,sBAAKC,UAAWF,EAAQ1B,KAAxB,UAEKkB,EAEG,eAACW,EAAA,EAAD,CAAaC,aAAW,aAAaF,UAAU,YAA/C,UACA,cAACG,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,WAAQd,EAAa,IAFhC,kBAMA,cAACY,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,WAAQd,EAAa,IAFhC,qBARA,GAiBHD,EAGC,cAACgB,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOP,aAAW,eAAlB,UACE,cAACQ,EAAA,EAAD,UACE,eAAC5D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAM,SACNuD,UAAU,KACVI,MAAO,CAAEC,MAAO,QAHlB,qBAOA,cAAC7D,EAAA,EAAD,CACEC,MAAM,SACNuD,UAAU,KACVI,MAAO,CAAEC,MAAO,QAHlB,wBASJ,eAACC,EAAA,EAAD,WAEKrB,EAAYF,EAAYnC,OAErB,cAAC,EAAD,CACA5B,MAAOiE,EAAYF,EAAYnC,OAC/B3B,UAAWA,IAHX,mBAAGmF,MAAO,CAAEG,UAAW,UAAvB,wCAOHtB,EAAYF,EAAYlC,QAErB,cAAC,EAAD,CACA7B,MAAOiE,EAAYF,EAAYlC,QAC/B5B,UAAWA,IAHX,mBAAGmF,MAAO,CAAEG,UAAW,UAAvB,sCAOHtB,EAAYF,EAAYjC,QAErB,cAAC,EAAD,CACA9B,MAAOiE,EAAYF,EAAYjC,QAC/B7B,UAAWA,IAHX,mBAAGmF,MAAO,CAAEG,UAAW,UAAvB,0CAzCV,8DC7FRC,EAAcC,QACW,cAA7BlC,OAAOC,SAASkC,UAEe,UAA7BnC,OAAOC,SAASkC,UAEhBnC,OAAOC,SAASkC,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1B5C,QAAQC,IACN,+GAKEgC,GAAUA,EAAOY,UACnBZ,EAAOY,SAASP,KAMlBtC,QAAQC,IAAI,sCAGRgC,GAAUA,EAAOa,WACnBb,EAAOa,UAAUR,WAO5BS,OAAM,SAACC,GACNhD,QAAQgD,MAAM,4CAA6CA,MCjGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFcnB,SAAkB5B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI4B,IAAIC,kBAAwBrE,OAAOC,SAASqE,MACpDC,SAAWvE,OAAOC,SAASsE,OAIvC,OAGFvE,OAAOwE,iBAAiB,QAAQ,WAC9B,IAAMlC,EAAK,UAAM+B,kBAAN,sBAEPpC,IAgEV,SAAiCK,EAAeC,GAE9CkC,MAAMnC,EAAO,CACXoC,QAAS,CAAE,iBAAkB,YAE5B/B,MAAK,SAACgC,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CvC,UAAUC,cAAcuC,MAAMrC,MAAK,SAACC,GAClCA,EAAaqC,aAAatC,MAAK,WAC7B3C,OAAOC,SAASiF,eAKpB7C,EAAgBC,EAAOC,MAG1Bc,OAAM,WACL/C,QAAQC,IAAI,oEAtFV4E,CAAwB7C,EAAOC,GAI/BC,UAAUC,cAAcuC,MAAMrC,MAAK,WACjCrC,QAAQC,IACN,+GAMJ8B,EAAgBC,EAAOC,OEvC/B6C,GAEA7B,M","file":"static/js/main.e24a9463.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const Counter = ({ event, countType }: any) => {\n  const [count, setCount] = useState(0);\n\n  const convertDatetimeToTimestamp = (datetime: string): number => new Date(datetime).getTime();\n\n  const culcTime = (target: number): number => {\n    const now = new Date().getTime();\n    return target - now + 1000;\n  };\n\n  const convertHour = (timestamp: number): string => {\n    const hours = String(Math.floor(timestamp / (1000 * 60 * 60))).padStart(2, '0');\n    const minutes = String(Math.floor((timestamp % (1000 * 60 * 60)) / (1000 * 60))).padStart(2, '0');\n    const seconds = String(Math.floor((timestamp % (1000 * 60)) / 1000)).padStart(2, '0');\n    return `${hours}h ${minutes}m ${seconds}s`\n  }\n\n  const convertDate = (timestamp: number): string => {\n    const days = String(Math.floor(timestamp / (1000 * 60 * 60 * 24))).padStart(2, '0');\n    const hours = String(Math.floor((timestamp % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))).padStart(2, '0');\n    const minutes = String(Math.floor((timestamp % (1000 * 60 * 60)) / (1000 * 60))).padStart(2, '0');\n    const seconds = String(Math.floor((timestamp % (1000 * 60)) / 1000)).padStart(2, '0');\n    return `${days}d ${hours}h ${minutes}m ${seconds}s`\n  }\n\n  const convertCount = [convertHour, convertDate];\n\n  const setTime = useCallback(targetTimestamp => {\n    setTimeout(() => {\n      setCount(culcTime(targetTimestamp));\n      setTime(targetTimestamp);\n    }, 100);\n  }, [])\n\n  useEffect(() => {\n    setTime(convertDatetimeToTimestamp(event.datetime));\n  }, [event.datetime, setTime]);\n\n  return (\n    <>\n      {\n        count === 0\n          ? ''\n          : <TableRow>\n            <TableCell align=\"center\">\n              {event.name}\n            </TableCell>\n            <TableCell align=\"center\">{convertCount[countType](count)}</TableCell>\n          </TableRow>\n      }\n    </>\n  );\n}\n","export const events = {\n  'y-dev01': {\n    kadai: [\n      {\n        name: \"CHEESE ACADEMY\",\n        datetime: \"2021-10-23T12:59:59+09:00\"\n      },\n      {\n        name: \"Janken KADAI\",\n        datetime: \"2021-10-28T23:59:59+09:00\"\n      },\n      {\n        name: \"Janken KADAI 2\",\n        datetime: \"2021-11-04T23:59:59+09:00\"\n      },\n      {\n        name: \"Localstorage KADAI\",\n        datetime: \"2021-11-11T23:59:59+09:00\"\n      },\n      {\n        name: \"Firebase KADAI\",\n        datetime: \"2021-11-25T23:59:59+09:00\"\n      },\n      {\n        name: \"API KADAI\",\n        datetime: \"2021-12-02T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP01 KADAI\",\n        datetime: \"2021-12-09T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP02 KADAI\",\n        datetime: \"2021-12-16T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP03 KADAI\",\n        datetime: \"2021-12-23T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP04 KADAI\",\n        datetime: \"2022-01-06T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP05 KADAI\",\n        datetime: \"2022-01-13T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP06 KADAI\",\n        datetime: \"2022-01-20T23:59:59+09:00\"\n      }\n    ],\n    submit: [\n      {\n        name: \"Limit of product\",\n        datetime: \"2022-03-26T23:59:59+09:00\"\n      }\n    ],\n    hubday: [\n      {\n        name: \"Opening of hubday\",\n        datetime: \"2022-05-12T18:00:00+09:00\"\n      }\n    ],\n  },\n  'f-dev09': {\n    kadai: [\n      {\n        name: \"CHEESE ACADEMY\",\n        datetime: \"2021-09-04T13:59:59+09:00\"\n      },\n      {\n        name: \"Janken KADAI\",\n        datetime: \"2021-09-18T11:59:59+09:00\"\n      },\n      {\n        name: \"Localstorage KADAI\",\n        datetime: \"2021-09-25T11:59:59+09:00\"\n      },\n      {\n        name: \"Firebase KADAI\",\n        datetime: \"2021-10-09T11:59:59+09:00\"\n      },\n      {\n        name: \"API KADAI\",\n        datetime: \"2021-10-16T11:59:59+09:00\"\n      },\n      {\n        name: \"PHP01 KADAI\",\n        datetime: \"2021-10-23T11:59:59+09:00\"\n      },\n      {\n        name: \"PHP02 KADAI\",\n        datetime: \"2021-10-30T11:59:59+09:00\"\n      },\n      {\n        name: \"PHP03 KADAI\",\n        datetime: \"2021-11-06T11:59:59+09:00\"\n      },\n      {\n        name: \"PHP04 KADAI\",\n        datetime: \"2021-11-13T11:59:59+09:00\"\n      },\n      {\n        name: \"PHP05 KADAI\",\n        datetime: \"2021-11-20T11:59:59+09:00\"\n      },\n      {\n        name: \"PHP06 KADAI\",\n        datetime: \"2021-11-27T11:59:59+09:00\"\n      }\n    ],\n    submit: [\n      {\n        name: \"Limit of product\",\n        datetime: \"2022-01-29T23:59:59+09:00\"\n      }\n    ],\n    hubday: [\n      {\n        name: \"Opening of hubday\",\n        datetime: \"2022-02-17T17:30:00+09:00\"\n      }\n    ],\n  },\n  'f-dev08': {\n    kadai: [\n      {\n        name: \"CHEESE ACADEMY\",\n        datetime: \"2021-04-24T13:59:59+09:00\"\n      },\n      {\n        name: \"Janken KADAI\",\n        datetime: \"2021-05-13T23:59:59+09:00\"\n      },\n      {\n        name: \"Localstorage KADAI\",\n        datetime: \"2021-05-25T23:59:59+09:00\"\n      },\n      {\n        name: \"Firebase KADAI\",\n        datetime: \"2021-06-03T23:59:59+09:00\"\n      },\n      {\n        name: \"API KADAI\",\n        datetime: \"2021-06-10T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP01 KADAI\",\n        datetime: \"2021-06-17T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP02 KADAI\",\n        datetime: \"2021-06-24T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP03 KADAI\",\n        datetime: \"2021-07-01T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP04 KADAI\",\n        datetime: \"2021-07-08T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP05 KADAI\",\n        datetime: \"2021-07-15T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP06 KADAI\",\n        datetime: \"2021-07-29T23:59:59+09:00\"\n      }\n    ],\n    submit: [\n      {\n        name: \"Limit of product\",\n        datetime: \"2021-10-19T23:59:59+09:00\"\n      }\n    ],\n    hubday: [\n      {\n        name: \"Opening of hubday\",\n        datetime: \"2021-11-11T17:30:00+09:00\"\n      }\n    ],\n  },\n  'f-dev07': {\n    kadai: [\n      {\n        name: \"Janken KADAI\",\n        datetime: \"2020-11-12T23:59:59+09:00\"\n      },\n      {\n        name: \"Localstorage KADAI\",\n        datetime: \"2020-11-19T23:59:59+09:00\"\n      },\n      {\n        name: \"Firebase KADAI\",\n        datetime: \"2020-11-26T23:59:59+09:00\"\n      },\n      {\n        name: \"API KADAI\",\n        datetime: \"2020-12-10T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP01 KADAI\",\n        datetime: \"2020-12-17T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP02 KADAI\",\n        datetime: \"2020-12-24T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP03 KADAI\",\n        datetime: \"2021-01-07T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP04 KADAI\",\n        datetime: \"2021-01-14T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP05 KADAI\",\n        datetime: \"2021-01-21T23:59:59+09:00\"\n      },\n      {\n        name: \"PHP06 KADAI\",\n        datetime: \"2021-02-04T23:59:59+09:00\"\n      }\n    ],\n    submit: [\n      {\n        name: \"Limit of product\",\n        datetime: \"2021-04-30T23:59:59+09:00\"\n      }\n    ],\n    hubday: [\n      {\n        name: \"Opening of hubday\",\n        datetime: \"2021-05-20T17:30:00+09:00\"\n      }\n    ],\n  },\n}","import React, { useState } from 'react';\nimport { createMuiTheme, MuiThemeProvider, makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as colors from \"@material-ui/core/colors\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Counter } from './components/Counter';\nimport './App.css';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core';\nimport { events } from './data/events';\n\nconst darkTheme = createMuiTheme({\n  typography: {\n    fontSize: 20,\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      // main: '#3e62ad',\n      main: '#f39800',\n    },\n    secondary: colors.orange,\n  },\n});\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      '& .Link-root': {\n        margin: theme.spacing(2),\n        // width: '35ch',\n      },\n    },\n  })\n);\n\nexport type Event = {\n  name: string, datetime: string,\n}\n\nexport type ClassEvent = {\n  kadai: Event[],\n  submit: Event[],\n  hubday: Event[],\n}\n\ninterface AllEvents {\n  [key: string]: ClassEvent;\n}\nexport const App = () => {\n  const uriArray = window.location.pathname.split('/');\n  const params: keyof AllEvents = uriArray[uriArray.length - 1];\n  console.log(params);\n  const allEvents = events as AllEvents;\n  const classEvents: ClassEvent = allEvents[params];\n\n  const [countType, setCountType] = useState(0)\n\n  const isCompleted = (events: Event[]): Event => {\n    return events\n      .filter(x => new Date(x.datetime).getTime() > new Date().getTime())\n      .sort((a: Event, b: Event) => a.datetime > b.datetime ? 1 : -1)\n    [0]\n  }\n\n  const classes = useStyles(darkTheme);\n\n  return (\n    <MuiThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        {\n          !classEvents\n            ? ''\n            : <Breadcrumbs aria-label=\"breadcrumb\" className=\"Link-root\">\n              <Link\n                color=\"inherit\"\n                onClick={() => { setCountType(0) }}\n              >\n                Hour\n              </Link>\n              <Link\n                color=\"inherit\"\n                onClick={() => { setCountType(1) }}\n              >\n                Date\n              </Link>\n            </Breadcrumbs>\n        }\n        {\n          !classEvents\n            ? <p>404 Event Not Found...</p>\n            :\n            <TableContainer component={Paper}>\n              <Table aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      align=\"center\"\n                      component=\"th\"\n                      style={{ width: '30ch' }}\n                    >\n                      Content\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      component=\"th\"\n                      style={{ width: '30ch' }}\n                    >\n                      Limit\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    !isCompleted(classEvents.kadai)\n                      ? <p style={{ textAlign: 'center' }}>KADAI is all completed...!</p>\n                      : <Counter\n                        event={isCompleted(classEvents.kadai)}\n                        countType={countType}\n                      />\n                  }\n                  {\n                    !isCompleted(classEvents.submit)\n                      ? <p style={{ textAlign: 'center' }}>Product is completed...!</p>\n                      : <Counter\n                        event={isCompleted(classEvents.submit)}\n                        countType={countType}\n                      />\n                  }\n                  {\n                    !isCompleted(classEvents.hubday)\n                      ? <p style={{ textAlign: 'center' }}>GGA is completed...!</p>\n                      : <Counter\n                        event={isCompleted(classEvents.hubday)}\n                        countType={countType}\n                      />\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n        }\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\n// export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}